package net.pursue.ui.gui.exploit;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiScreen;
import net.pursue.Nattalie;
import net.pursue.mode.Mode;
import org.lwjgl.input.Keyboard;

import java.awt.*;
import java.io.IOException;

public class ClickKey extends GuiScreen {

    private static final int KEY_WIDTH = 40; // 键盘键的宽度
    private static final int KEY_HEIGHT = 40; // 键盘键的高度
    private static final int ROWS = 6; // 键盘的行数
    private static Mode m;

    private static final String[][] keys = {
            {"Esc", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "Print", "Scroll", "Pause"},
            {"~", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "Backspace"},
            {"Tab", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "[", "]", "\\"},
            {"Caps", "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'", "Enter"},
            {"Shift", "Z", "X", "C", "V", "B", "N", "M", ",", ".", "/", "RShift"},
            {"Ctrl", "Win", "Alt", "Space", "Alt", "Win", "Menu", "Ctrl"}
    };

    private final Minecraft mc;

    public ClickKey(Mode mode) {
        mc = Minecraft.getMinecraft();
        m = mode;
    }

    @Override
    public void initGui() {
        super.initGui();
    }

    @Override
    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
        super.drawScreen(mouseX, mouseY, partialTicks);

        int yOffset = this.height / 2 - (KEY_HEIGHT * ROWS) / 2;

        for (int row = 0; row < ROWS; row++) {
            int xOffset = this.width / 2 - (KEY_WIDTH * keys[row].length) / 2;
            for (int col = 0; col < keys[row].length; col++) {
                int x = xOffset + col * KEY_WIDTH;
                int y = yOffset + row * KEY_HEIGHT;
                String key = keys[row][col];

                if (mouseX >= x && mouseX <= x + KEY_WIDTH && mouseY >= y && mouseY <= y + KEY_HEIGHT) {
                    drawRect(x, y, x + KEY_WIDTH, y + KEY_HEIGHT, new Color(100,100,100,180).getRGB());
                } else {
                    drawRect(x, y, x + KEY_WIDTH, y + KEY_HEIGHT, new Color(0,0,0,180).getRGB());
                }

                drawCenteredString(mc.fontRendererObj, key, x + KEY_WIDTH / 2, y + KEY_HEIGHT / 2, Color.WHITE.getRGB());
            }
        }
    }

    @Override
    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
        super.mouseClicked(mouseX, mouseY, mouseButton);

        int yOffset = this.height / 2 - (KEY_HEIGHT * ROWS) / 2;
        for (int row = 0; row < ROWS; row++) {
            int xOffset = this.width / 2 - (KEY_WIDTH * keys[row].length) / 2;
            for (int col = 0; col < keys[row].length; col++) {
                int x = xOffset + col * KEY_WIDTH;
                int y = yOffset + row * KEY_HEIGHT;

                if (mouseX >= x && mouseX <= x + KEY_WIDTH && mouseY >= y && mouseY <= y + KEY_HEIGHT) {
                    String key = keys[row][col];

                    if (mouseButton == 0) {
                        m.setKey(Keyboard.getKeyIndex(key));
                        mc.displayGuiScreen(Nattalie.instance.getPursueGUI());
                    }
                }
            }
        }
    }

    @Override
    public boolean doesGuiPauseGame() {
        return false;
    }
}

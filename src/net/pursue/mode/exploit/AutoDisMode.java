package net.pursue.mode.exploit;

import net.minecraft.network.Packet;
import net.minecraft.network.play.server.SPacketChat;
import net.pursue.Nattalie;
import net.pursue.event.EventTarget;
import net.pursue.event.packet.EventPacket;
import net.pursue.utils.category.Category;
import net.pursue.mode.Mode;
import net.pursue.mode.combat.KillAura;
import net.pursue.mode.player.*;

import java.util.regex.Pattern;

public class AutoDisMode extends Mode {

    public AutoDisMode(){
        super("AutoDisMode", "自动关闭功能", "玩家死亡后关闭或者游戏结束自动关闭功能", Category.EXPLOIT);
    }

    @EventTarget
    private void onPacket(EventPacket eventPacket) {
        Packet<?> packet = eventPacket.getPacket();

        if (packet instanceof SPacketChat s02PacketChat) {
            if (s02PacketChat.getChatComponent().getUnformattedText().contains("获得胜利!") || s02PacketChat.getChatComponent().getUnformattedText().contains("游戏开始 ...") || s02PacketChat.getChatComponent().getUnformattedText().contains("你现在是观察者状态. 按E打开菜单.") || s02PacketChat.getChatComponent().getUnformattedText().contains("/spawn 可以退出观察者模式")) {
                dis();
            }
            if (Pattern.compile("你在地图(.*?)中赢得了(.*?)").matcher(s02PacketChat.getChatComponent().getUnformattedText()).find() || s02PacketChat.getChatComponent().getUnformattedText().contains("你现在是观察者状态. 按E打开菜单.")) {
                dis();
            }
        } else if (mc.player != null && !mc.player.isEntityAlive() || mc.player != null && mc.player.ticksExisted <= 1) {
            dis();
        }
    }


    public void dis() {
        if (Nattalie.instance.getModeManager().getByClass(KillAura.class).isEnable()) Nattalie.instance.getModeManager().getByClass(KillAura.class).setEnable(false);
        if (Nattalie.instance.getModeManager().getByClass(Scaffold.class).isEnable()) Nattalie.instance.getModeManager().getByClass(Scaffold.class).setEnable(false);
        if (Nattalie.instance.getModeManager().getByClass(AutoHeal.class).isEnable()) Nattalie.instance.getModeManager().getByClass(AutoHeal.class).setEnable(false);
        if (Nattalie.instance.getModeManager().getByClass(Manager.class).isEnable()) Nattalie.instance.getModeManager().getByClass(Manager.class).setEnable(false);
        if (Nattalie.instance.getModeManager().getByClass(Stealer.class).isEnable()) Nattalie.instance.getModeManager().getByClass(Stealer.class).setEnable(false);
    }
}
